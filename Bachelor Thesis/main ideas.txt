The bot would ideally be easily adaptable to other game modes as well, other than chess, such as go, other chess variants such as 6x6 and so on. And the paper might even try to induce conclusions based on the results for those game modes. Fischer chess would be a good place to wander about.


Elo rating - quantification of the performance of a system
Elo is for 2 player games


Inverse petrosian evaluation (rapier) - overprotecting pieces (protecting more than is deemed necessary, sacrificing the quality of the position) is a human tendency to counter short-term tactics. A computer does not need to adhere to such heuristic, in fact favoring situations that decrease number of protections is favorable to it

Weights of pieces (rapier)
pawn - 100
knight - 230
bishop - 340
rook - 509
queen - 1002

The usual weights as used by humans are
pawn - 100
knight - 300
bishop - 300
rook - 500
queen - 900

The evaluation of the board can be considered the sum of each weight of each piece multiplied by the difference between the count of that piece on your side minus opposite side.
Slight differences in evaluations of pieces depending on their position, state of the game and the inverse petrosian evaluation

Should try to hold the board state in as little space as possible, not 8x8 in-memory matrix. (techniques to parallelize chess)
min-max with alpha-beta pruning and iterative deepening (this is simply repeating dfs with a bigger depth at each step).
principle variation (multithreading as suggested by "Techniques to parallelize chess")

Heuristics about which moves to consider first (if at all) might be among those such as not moving kings apart from castling early in the game, giving greater weight to pawn, bishop and knight moves early in the game. Also can consider a matrix of weights per piece depending on their position on the board, a pawn close to promoting is more valuable than one on its home rank. Connected pawns are more valuable, connected passed pawns even more so, isolated and doubled pawns are not all that great. Castling is highly desirable, advancing pieces off their home ranks and close to the middle of the board is also desirable. Another thing to do is to give more weight to knights than bishops when there are many pieces on the board, around +30% in the early game and -30% in late game. Great weight should be given to moves that capture a valuable piece with a less valuable piece, moderate weight to moves that capture equal(-ish) pieces. Also could take into account the fact whether the move captures a protected or unprotected piece.

early game - at most two pieces are off the board, late game at most 3 pieces are on the board.

quiescence search (not leaving positions in unstable, easily changing configurations) (Developing Chess Engine 2021, page 24)
quiet could be the lack of an opportunity of attacking a higher valued piece than the attacking side for both white and black.

maybe make the thesis about analysing the efficiency of an engine with various degrees of complexity (bare min-max, min-max with alpha-beta pruning, last one with iterative deepening, last one with quiescence search, last one with heuristics).