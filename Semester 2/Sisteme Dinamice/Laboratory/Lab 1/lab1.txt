> evalf(e);

                                  e

> evalf(exp(1));

                             2.718281828

> evalf(sqrt(3));

                             1.732050808

> evalf(pi);

                                  pi

> evalf(Pi);

                             3.141592654

> evalf(sin(0.1));

                            0.09983341665

> a := (x^2 + 2*x - 1)^3*(x^2-2);

                         2                3        2
             a := (exp(2)  + 2 exp(2) - 1)  (exp(2)  - 2)

> 
> unassign(x);
> a;

                      2                3        2
               (exp(2)  + 2 exp(2) - 1)  (exp(2)  - 2)

> x;

                                exp(2)

> x = 'x';

                              exp(2) = x

> exp(2) = x;

                           exp(2) = exp(2)

> x := 'x';

                                x := x

> x;

                                  x

> a;

                      2                3        2
               (exp(2)  + 2 exp(2) - 1)  (exp(2)  - 2)

> a := (x^2 + 2*x - 1)^3*(x^2-2);

                           2           3   2
                    a := (x  + 2 x - 1)  (x  - 2)

> factor(a);

                         2           3   2
                       (x  + 2 x - 1)  (x  - 2)

> ?factor
> factor(a);

                         2           3   2
                       (x  + 2 x - 1)  (x  - 2)

> expand(a);

      8      6      7       5       4       3       2
     x  + 7 x  + 6 x  - 16 x  - 27 x  + 14 x  + 17 x  - 12 x + 2

> a;

                         2           3   2
                       (x  + 2 x - 1)  (x  - 2)

> a := 'a';

                                a := a

> a := (x+n)^5;

                                        5
                            a := (x + n)

> expand(a);

            5      4         3  2       2  3        4    5
           x  + 5 x  n + 10 x  n  + 10 x  n  + 5 x n  + n

> a := 'a
> ';

                                a := a

> factorize(x^8-1);

                                     8
                          factorize(x  - 1)

> 
> factor(x^8-1);

                                    2        4
                  (x - 1) (x + 1) (x  + 1) (x  + 1)

> factor(x^7-1);

                         6    5    4    3    2
               (x - 1) (x  + x  + x  + x  + x  + x + 1)

> (2*x^2)/(x^3-1) + (3*x)/(x^2-1);

                               2
                            2 x      3 x
                           ------ + ------
                            3        2
                           x  - 1   x  - 1

> simplify(%);

                             2
                         (5 x  + 5 x + 3) x
                        ---------------------
                          2        2
                        (x  - 1) (x  + x + 1)

> simplify(sin(x)^2+cos(x)^2);

                                  1

> ?subs
> ?eval
> eval(exp(x)+ln(x));

                            exp(x) + ln(x)

> eval(exp(x)+ln(x), x=2);

                            exp(2) + ln(2)

> evalf(exp(x)+ln(x), x=2);
Error, wrong number (or type) of parameters in function evalf

> evalf(eval(exp(x)+ln(x), x=2));

                             8.082203280

> subs(exp(x)+ln(x), x=2);
Error, wrong number (or type) of parameters in function subs

> subs(x=2, exp(x)+ln(x));

                            exp(2) + ln(2)

> evalf(subs(x=2, exp(x)+ln(x)));

                             8.082203280

> eval(x^2-4*x+3);

                              2
                             x  - 4 x + 3

> solve(x^2-4*x+3, x);

                                 3, 1

> solve(x^2*y+2*y-x=0, x);

                             2 1/2              2 1/2
                 1 + (1 - 8 y )     1 - (1 - 8 y )
                 -----------------, -----------------
                        2 y                2 y

> solve(x^2*y+2*y-x=0, y);

                                  x
                                ------
                                 2
                                x  + 2

> solve(x-cos(x)=0, x);

                         RootOf(_Z - cos(_Z))

> x;

                                  x

> 
> solve(x-cos(x), x);

                         RootOf(_Z - cos(_Z))

> evalf(solve(x-cos(x)=0, x));

                             0.7390851332

> simplify(solve(x-cos(x)=0,x));

                         RootOf(_Z - cos(_Z))

> factor(x^5-3*x^3-1);

                             5      3
                            x  - 3 x  - 1

> solve(x^5-3*x^3-1=0, x);

  RootOf(%1, index = 1), RootOf(%1, index = 2), RootOf(%1, index = 3),

        RootOf(%1, index = 4), RootOf(%1, index = 5)

          5       3
  %1 := _Z  - 3 _Z  - 1

> fsolve(x^5-3*x^3-1=0, x);

               -1.668777593, -0.7418139305, 1.782308780

> solve(4*x+3*y=10, 3*x-y=1, {x, y});
Error, (in solve) invalid arguments

> solve({4*x+3*y=10, 3*x-y=1}, {x, y});

                            {y = 2, x = 1}

> f:=x->exp(x)-sin(x);

                      f := x -> exp(x) - sin(x)

> f(0);

                                  1

> f(1);

                           exp(1) - sin(1)

> D(f)(0);

                                  0

> D(f)(1);

                           exp(1) - cos(1)

> D(f);

                         x -> exp(x) - cos(x)

> (D@@2)(f);

                         x -> exp(x) + sin(x)

> diff(f(x),x);

                           exp(x) - cos(x)

> diff(f(x),x$2);

                           exp(x) + sin(x)

> 
> int(f(x));
Error, (in int) wrong number (or type) of arguments

> int(f(x),x);

                           exp(x) + cos(x)

> f(x);

                           exp(x) - sin(x)

> 
> int(f(x),-1..1);

                      1
                     /
                    |
                    |   exp(x)(_X) - sin(x)(_X) d_X
                    |
                   /
                     -1

> evalf(%);

                    1.
                   /
                  |
                  |    exp(x)(_X) - 1. sin(x)(_X) d_X
                  |
                 /
                   -1.

> int(f(1))-int(f(-1));
Error, (in int) wrong number (or type) of arguments

> int(f(x),x)(1)-int(f(x),x)(-1);

           exp(x)(1) + cos(x)(1) - exp(x)(-1) - cos(x)(-1)

> int(f(x), x=-1..1);

                           exp(1) - exp(-1)

> f := 'f';

                                f := f

> g := x->exp(x)-sin(x);

                      g := x -> exp(x) - sin(x)

> g(0);

                                  1

> D(g);

                         x -> exp(x) - cos(x)

> %(0);

                                  0

> int(g);
Error, (in int) wrong number (or type) of arguments

> int(g,x);

                                 g x

> int(g(x),x);

                           exp(x) + cos(x)

> int(g(x),x=-1..1);

                           exp(1) - exp(-1)

> g := exp(x)-sin(x);g := exp(x)-sin(x);

                         g := exp(x) - sin(x)

> eval(g, x=0);

                                  1

> diff(g,x);
> 
> diff(g,x);
> 
> 

                           exp(x) - cos(x)

> %(0);

                        exp(x)(0) - cos(x)(0)

> diff(g,x=0);
Error, wrong number (or type) of parameters in function diff

> eval(diff(g,x),x=0);

                                  0

> int(g,x);

                           exp(x) + cos(x)

> int(g,x=-1..1);

                           exp(1) - exp(-1)

> g;

                                  g

> g := exp(x)-sin(x);

                         g := exp(x) - sin(x)

> f := unapply(g, x);

                      f := x -> exp(x) - sin(x)

> f(0);

                                  1

> limit(sin(x)/x,x=0);

                                  1

> limit((cos(x)+1)/(x-pi), x=pi);

                                  cos(x) + 1
                           lim    ----------
                         x -> pi    x - pi

> limit((cos(x)+1)/(x-Pi), x=Pi);

                                  0

> 
> plot(sin(x), x=0..2*Pi);

> plot(sin(x), x=-4*Pi..4*Pi);

> plot(sin(x), x=-100..100);

> plot(sin(x), x=-infinity..infinity);

> 
> plot(1/x);
Plotting error, empty plot
> plot(1/x, x=0..100);

> plot(1/x, x=0..1);

> plot(1/x, x=-1..1);

> plot(1/x, x=2..4);

> plot(2-t^2, t-t^3, t=-2..2);
Error, (in plot) invalid arguments

> plot([2-t^2, t-t^3, t=-2..2]);

> plot([cos(t), sin(t), t=0..Pi/6]);

> plot([cos(t), sin(t), t=0..Pi/3]);

> plot([cos(t), sin(t), t=0..Pi/2]);

> plot([cos(t), sin(t), t=0..Pi]);

> plot([cos(t), sin(t), t=0..3*Pi/2]);

> plot([cos(t), sin(t), t=0..2*Pi]);

> plot([cos(t), sin(t), t=0..4*Pi]);

> plot([2*cos(t/3), 2*sin(t/3), t=0..Pi]);

> plot([2*cos(t/3), 2*sin(t/3), t=0..Pi/2]);

> plot([2*cos(t/3), 2*sin(t/3), t=0..2*Pi]);

> plot([2*cos(t/3), 2*sin(t/3), t=0..6*Pi]);

> plot([2*cos(t/3), 2*sin(t/3), t=0..1]);

> plot([cos(4*t), sin(4*t), t=0..2]);

> plot([cos(4*t), sin(4*t), t=0..0.2]);

> with(plots);
Warning, the name changecoords has been redefined


  [animate, animate3d, animatecurve, arrow, changecoords, complexplot,

        complexplot3d, conformal, conformal3d, contourplot,

        contourplot3d, coordplot, coordplot3d, cylinderplot,

        densityplot, display, display3d, fieldplot, fieldplot3d,

        gradplot, gradplot3d, graphplot3d, implicitplot,

        implicitplot3d, inequal, interactive, listcontplot,

        listcontplot3d, listdensityplot, listplot, listplot3d,

        loglogplot, logplot, matrixplot, odeplot, pareto, plotcompare,

        pointplot, pointplot3d, polarplot, polygonplot, polygonplot3d,

        polyhedra_supported, polyhedraplot, replot, rootlocus,

        semilogplot, setoptions, setoptions3d, spacecurve,

        sparsematrixplot, sphereplot, surfdata, textplot, textplot3d,

        tubeplot]

> implicitplot((x-9)^2+(y-10)^2=1, x=8..10, y=9..11);

> implicitplot(y=x^2, x=-3..3, y=0..10);

> implicitplot(4*x^2+y^2=4, x=-3..3, y=-3..3);

> implicitplot(x^2-2*x*y-y^2=1, x=-10..10, y=-10..10);
> 

> implicitplot(y^3+y^2-5*y-x*2=-4, x=-10..10, y=-10..10);

> plot3d(x^2+y^2, x=-2..2, y=-2..2);

>